{"version":3,"sources":["redux/reducers/galleryReducer.js","picturesData.js","redux/reducers/sliderReducer.js","redux/reducers/rootReducer.js","components/gallery/gallery.js","components/slider/slider.js","App.js","index.js"],"names":["initialState","picturesData","url","comment","hidden","index","rootReducer","combineReducers","galleryReducer","state","action","type","console","log","sliderReducer","Gallery","dispatch","useDispatch","galleryState","useSelector","useState","showPic","e","target","id","overTargetClose","classList","contains","remove","add","className","map","el","i","onClick","alt","src","process","value","Slider","sliderOpenState","slideIndex","setSlideIndex","useEffect","length","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeLnecap","slide","moveDot","document","location","href","App","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.40843de8.chunk.js","sourcesContent":["import {picturesData} from '../../picturesData';\n\nconst initialState = {\n    picturesData\n}\n\nexport const galleryReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case 'EDIT_COMMENT':\n            console.log('editComment')\n            \n            return{\n                ...state\n            }\n        default:\n            return state\n    }\n}\n\n","export const picturesData = [\n    {url: \"/assets/bb/2.jpg\", comment:'It was cool!'},\n    {url: \"/assets/bb/3.jpg\", comment: 'Such a tasty food!'},\n    {url: \"/assets/bb/4.jpg\", comment: 'You are asshole'},\n    {url: \"/assets/bb/5.jpg\", comment: 'Its sucks'},\n    {url: \"/assets/bb/6.jpg\", comment: 'Do you like this job?'},\n    {url: \"/assets/bb/7.jpg\", comment: 'They are loock like we'},\n    {url: \"/assets/bb/8.jpg\", comment: 'Check this out!'}\n\n]","//import {picturesData} from '../../picturesData';\n\nconst initialState = {\n    hidden: true,\n    index: 1\n}\n\nexport const sliderReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case 'SHOW_SLIDER':\n            console.log('showslider')\n            \n            return{\n                ...state,\n                hidden: action.hidden,\n                index: action.index\n            }\n        default:\n            return state\n    }\n}\n\n","import {combineReducers} from 'redux';\n\nimport {galleryReducer} from './galleryReducer';\nimport {sliderReducer} from './sliderReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    galleryReducer,\n    sliderReducer\n});","\nimport './gallery.scss';\n\n\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {useState} from 'react';\n\n\n\n\nconst Gallery = () => {\n\n    const dispatch = useDispatch();\n\n    const galleryState = useSelector(state => {\n        console.log(state)\n        const picturesData = state.galleryReducer.picturesData;\n        return picturesData\n    });\n      \n    const sliderOpenState = useSelector(state => {\n        console.log(state.sliderReducer);\n        const sliderOpenData = state.sliderReducer;\n        return sliderOpenData\n    })\n\n\n\n    \n\n    \n    \n     \n      const [big, setBig] = useState(false);\n\n      \n    \n    \n    \n    \n      const showPic = (e) => {\n        console.log(e.target)\n        dispatch({type: 'SHOW_SLIDER', hidden: false, index: +e.target.id+1})\n     }\n\n     const overTargetClose = (e) => {\n         if(e.target.classList.contains('big')){\n             e.target.classList.remove('big');\n             e.target.classList.add('small');\n         }\n     }\n        \n     \n     \n     return(\n         <ul className=\"gallery-wrapper\">\n            {\n                galleryState.map((el,i)=>{\n                    return(\n                        <li className=\"card-wrapper\">\n                        <div className='img-wrapper' onClick={overTargetClose}>\n                            <img id={i} onClick={showPic} alt={el.comment} src={`${process.env.PUBLIC_URL}${el.url}`}/>\n                        </div>\n                        \n                        <input  value={el.comment} className=\"comment\" onClick={(e)=>console.log(e.target)}/>\n                        \n\n                    </li>\n                )\n            })\n        }\n\n        </ul>\n    )\n};\n\nexport default Gallery;\n","\nimport React, {useState, useEffect} from 'react';\n\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport './slider.scss';\n\n\n\n\n\n\n\n\nconst Slider = ({i}) => {\n\n    const dispatch = useDispatch();\n\n    const sliderOpenState = useSelector(state => {\n        console.log(state.sliderReducer);\n        const sliderOpenData = state.sliderReducer;\n        return sliderOpenData\n    })\n\n    const {hidden, index} = sliderOpenState;\n    \n    const [slideIndex, setSlideIndex] = useState(0);\n    \n    useEffect(() => {\n        setSlideIndex(index);\n      }, [index]);\n\n    const galleryState = useSelector(state => {\n        console.log(state)\n        const picturesData = state.galleryReducer.picturesData;\n        return picturesData\n    });\n\n    const closeSlider = (e) => {\n        if(e.target.className==='slider-wrapper'){\n\n            dispatch({type: 'SHOW_SLIDER', hidden: true})\n        }\n    }\n\n    \n\n    const nextSlide = () => {\n        if(slideIndex !== galleryState.length) {\n            setSlideIndex(slideIndex+1)\n        }\n        else if(slideIndex === galleryState.length){\n            setSlideIndex(1)\n        }\n    }\n    \n    const prevSlide = () => {\n        if(slideIndex !== 1) {\n            setSlideIndex(slideIndex-1)\n        }\n        else if (slideIndex === 1) {\n            setSlideIndex(galleryState.length)\n        }\n    }\n\n    const moveDot = index => {\n        setSlideIndex(index)\n    }\n    \n\n    return(\n        <div className=\"slider-wrapper\" hidden={hidden} onClick={closeSlider}>\n            <div className=\"slider\">\n                \n                    <button className=\"slider-button prev-slide\" onClick={prevSlide}>\n                        <svg width=\"10\" height=\"20\" viewBox=\"0 0 10 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M9 1L1 10L9 19\" stroke=\"#EEEEEE\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                        </svg>\n                    </button>\n                    <button className=\"slider-button next-slide\" onClick={nextSlide}>\n                        <svg width=\"10\" height=\"20\" viewBox=\"0 0 10 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M1 1L9 10L1 19\" stroke=\"#EEEEEE\" strokeWidth=\"2\" strokeLnecap=\"round\" strokeLinejoin=\"round\"/>\n                        </svg>\n                    </button>\n                    <ul className=\"slider-breadcrumbs-list\">\n                        {\n                        galleryState.map((slide, index) => {\n                            return(\n                            <li \n                                key={index+1}\n                                className={slideIndex === index+1 ? \"slider-breadcrumbs-list-item slider-breadcrumbs-list-item_active\" : \"slider-breadcrumbs-list-item\"}\n                                onClick={()=>moveDot(index+1)}>\n                                <img src={`${process.env.PUBLIC_URL}${slide.url}`}/>\n                            </li>\n                                \n                            )\n                        })\n                        }\n                    </ul>\n                {\n                    galleryState.map((slide, index) => {\n                        return(\n                            <div key={index+1} className={slideIndex === index+1 ? \"slide\" : \"hidden-slide\"}>\n                                <img  src={`${process.env.PUBLIC_URL}${galleryState[index].url}`}/>\n                                <div className=\"slide-comment\">{slide.comment}</div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Slider;","import './App.scss';\nimport classNames from 'classnames';\n\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {useState} from 'react';\n\nimport Gallery from './components/gallery/gallery';\n\nimport Slider from './components/slider/slider';\n\nconsole.log(document.location.href)\n\n\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Gallery/>\n      <Slider/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport {rootReducer} from './redux/reducers/rootReducer';\n\n\nimport './index.scss';\nimport App from './App';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}